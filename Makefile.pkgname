ifeq ($(strip $(RPM_TMP)),)
	RPM_TMP=$(HOME)/rpmbuild
endif

PKG_NAME=pkgname

BASE_DIR=$(shell pwd)/modules/$(PKG_NAME)
version=$(shell LANG=C cat $(BASE_DIR)/VERSION 2>/dev/null)


# rpmbuild --showrc | grep _topdir
# gives
# _builddir     %{_topdir}/BUILD
# _buildrootdir %{_topdir}/BUILDROOT
# _rpmdir       %{_topdir}/RPMS
# _sourcedir    %{_topdir}/SOURCES
# _specdir      %{_topdir}/SPECS
# _srcrpmdir    %{_topdir}/SRPMS
# _topdir       %{getenv:HOME}/rpmbuild

RPMBUILD=rpmbuild --quiet --define='_topdir $(RPM_TMP)' \
		--define='_builddir $(RPM_TMP)/BUILD' \
		--define='_rpmdir $(RPM_TMP)/RPMS' \
		--define='_sourcedir $(RPM_TMP)/SOURCES' \
		--define='_specdir $(RPM_TMP)/SPECS' \
		--define='_srcrpmdir $(RPM_TMP)/SRPMS' \
		--define='_tmppath $(RPM_TMP)/TMP'

all: copysrc copyspec

rpmprep:
	[ -d $(RPM_TMP) ] || mkdir -p $(RPM_TMP)
	for dir in BUILD RPMS SOURCES SPECS SRPMS TMP ; \
	do \
		[ -d $(RPM_TMP)/$$dir ] || mkdir -p $(RPM_TMP)/$$dir ; \
	done

copysrc: tarball
	if [ -f "$(shell ls $(BASE_DIR)/*.tar.gz 2>/dev/null| head -1)" ] ; then \
		cp $(BASE_DIR)/*.tar.gz $(RPM_TMP)/SOURCES ; \
	fi
	if [ -f "$(shell ls $(BASE_DIR)/*.tgz 2>/dev/null| head -1)" ] ; then \
		cp $(BASE_DIR)/*.tgz $(RPM_TMP)/SOURCES ; \
	fi
	if [ -f "$(shell ls $(BASE_DIR)/*.patch 2>/dev/null| head -1)" ] ; then \
		cp $(BASE_DIR)/*.patch $(RPM_TMP)/SOURCES ; \
	fi

tarball: rpmprep
	if [ ! -f $(BASE_DIR)/*.tar.gz ] ; then \
		cd $(BASE_DIR) && find . -type f -or -type l | \
			egrep -v '^./tests' | egrep -v '^./.git' | \
			cpio -pdumB --quiet $(RPM_TMP)/SOURCES/$(PKG_NAME)-$(version) ; \
		cd $(RPM_TMP)/SOURCES && \
			tar czf $(PKG_NAME)-$(version).tar.gz $(PKG_NAME)-$(version) \
			&& rm -rf $(PKG_NAME)-$(version) ; \
	fi

copyspec: rpmprep
	cat $(BASE_DIR)/$(PKG_NAME).spec |\
		sed -e 's/@@VERSION@@/$(version)/g' \
		> $(RPM_TMP)/SPECS/$(PKG_NAME).spec

buildsrc: copysrc copyspec
	[ -f $(RPM_TMP)/RPMS/$(PKG_NAME)*.rpm ] || $(RPMBUILD) -bs $(RPM_TMP)/SPECS/$(PKG_NAME).spec
